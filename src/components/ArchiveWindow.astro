---
import ProjectRow from './ProjectRow.astro';

interface Props {
    projects: Array<{
        date: string;
        name: string;
        type: string;
        desc: string;
        details: string;
        stack: string;
        year: string;
        status: string;
        category: string;
    }>;
}

const { projects } = Astro.props;
---

<div class="filter-container">
    <div class="filter-buttons">
        <button class="filter-btn active" data-filter="all">All Projects</button>
        <button class="filter-btn" data-filter="professional">Professional</button>
        <button class="filter-btn" data-filter="personal">Personal</button>
    </div>
</div>

<div class="cmd-window">
    <div class="cmd-titlebar">
        <div class="cmd-title">
            <div class="cmd-icon">C</div>
            Command Prompt - C:\Users\Conor\Projects\Archive
        </div>
    </div>

    <div class="cmd-body">
        <div class="prompt-line">
            <span class="prompt-path">C:\Users\Conor\Projects\Archive></span>
            <span class="prompt-command"> dir</span>
            <span class="cursor"></span>
        </div>

        <div class="system-info">
            <div>Volume in drive C is Windows</div>
            <div>Volume Serial Number is 1A2B-3C4D</div>
        </div>

        <div class="directory-path">
            Directory of C:\Users\Conor\Projects\Archive
        </div>

        <div class="dir-list">
            <div class="dir-header">
                <span>Date</span>
                <span>Name</span>
                <span>Type</span>
                <span>Description</span>
            </div>

            {projects.map((project) => (
                <ProjectRow project={project} />
            ))}
        </div>

        <div class="footer-info">
            <span class="project-count">{projects.length}</span> Dir(s)  â€¢  More projects buried in old hard drives somewhere...
        </div>
    </div>

    <div class="cmd-footer">
        <span class="footer-highlight">Click</span> any directory to view details
    </div>
</div>

<style>
    .filter-container {
        margin-bottom: 1.5rem;
        display: flex;
        justify-content: flex-start;
    }

    .filter-buttons {
        display: inline-flex;
        gap: 0.5rem;
        background: rgba(124, 179, 66, 0.05);
        padding: 0.5rem;
        border-radius: 8px;
        border: 1px solid rgba(124, 179, 66, 0.2);
    }

    .filter-btn {
        padding: 0.5rem 1.25rem;
        background: transparent;
        border: 1px solid transparent;
        color: #999;
        font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
        font-size: 0.85rem;
        cursor: pointer;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

    .filter-btn:hover {
        color: #7cb342;
        background: rgba(124, 179, 66, 0.1);
    }

    .filter-btn.active {
        color: #7cb342;
        background: rgba(124, 179, 66, 0.15);
        border-color: #7cb342;
        font-weight: 600;
    }

    .cmd-window {
        background: transparent;
        border: 1px solid #ffffff;
        box-shadow: none;
        margin-bottom: 2rem;
        font-size: 0.95rem;
        animation: fadeInUp 0.6s ease-out;
        transition: box-shadow 0.3s ease, transform 0.3s ease;
    }

    .cmd-window:hover {
        box-shadow: 0 4px 20px rgba(124, 179, 66, 0.1);
        transform: translateY(-2px);
    }

    .cmd-titlebar {
        background: transparent;
        padding: 0.5rem 0.75rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        border-bottom: 1px solid #333;
    }

    .cmd-title {
        font-size: 0.85rem;
        color: #cccccc;
        font-family: 'Segoe UI', sans-serif;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .cmd-icon {
        width: 16px;
        height: 16px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 10px;
        color: white;
        font-weight: bold;
        border-radius: 2px;
    }

    .cmd-body {
        padding: 1.5rem;
        font-size: 0.9rem;
        background: transparent;
        color: #999;
        position: relative;
        font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
    }

    .prompt-line {
        margin-bottom: 0.5rem;
        color: #999;
    }

    .prompt-path {
        color: #666;
    }

    .prompt-command {
        color: #999;
        font-weight: 500;
    }

    @keyframes blink {
        0%, 49% { opacity: 1; }
        50%, 100% { opacity: 0; }
    }

    .cursor {
        display: inline-block;
        width: 9px;
        height: 16px;
        background: #7cb342;
        margin-left: 2px;
        vertical-align: text-bottom;
        animation: blink 1s infinite;
    }

    .system-info {
        margin-bottom: 1.5rem;
        color: #666;
    }

    .directory-path {
        margin-bottom: 1.5rem;
        color: #999;
    }

    .dir-list {
        margin-top: 1rem;
    }

    .dir-header {
        color: #666;
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 1px solid #333;
        display: grid;
        grid-template-columns: 100px 200px 140px 1fr;
        gap: 1.5rem;
    }

    .footer-info {
        margin-top: 2rem;
        padding-top: 1rem;
        border-top: 1px solid #333;
        color: #999;
    }

    .project-count {
        color: #7cb342;
        font-weight: 600;
    }

    .cmd-footer {
        padding: 1rem;
        border-top: 1px solid #333;
        color: #666;
        font-size: 0.85rem;
        font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
    }

    .footer-highlight {
        color: #7cb342;
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @media (max-width: 768px) {
        .cmd-body {
            padding: 1rem;
            font-size: 0.85rem;
        }

        .dir-header {
            display: none;
        }

        .dir-list {
            font-size: 0.85rem;
        }

        .filter-buttons {
            flex-direction: column;
            width: 100%;
        }

        .filter-btn {
            width: 100%;
        }
    }
</style>

<script>
    // Toggle expand on click - using event delegation
    document.querySelector('.dir-list')?.addEventListener('click', (e) => {
        const row = e.target.closest('.dir-row');
        if (!row) return;

        // Ignore if clicking on images or gallery
        if (e.target.closest('.frame, .image-strip, .gallery-wrapper, .gallery-empty')) return;

        const isActive = row.classList.contains('active');
        
        // Close all other expanded sections
        document.querySelectorAll('.dir-row.active').forEach(r => {
            r.classList.remove('active');
        });
        
        // Toggle current
        if (!isActive) {
            row.classList.add('active');
        }
    });

    // Filter functionality
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectRows = document.querySelectorAll('.dir-row');
    const projectCount = document.querySelector('.project-count');

    filterButtons.forEach(button => {
        button.addEventListener('click', () => {
            const filter = button.getAttribute('data-filter');
            
            // Update active button
            filterButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            
            // Filter projects
            let visibleCount = 0;
            projectRows.forEach(row => {
                const category = row.getAttribute('data-category');
                const expandedSection = row.nextElementSibling;
                
                // Close any active rows first
                row.classList.remove('active');
                
                if (filter === 'all' || category === filter) {
                    // Show this row
                    row.style.display = 'grid';
                    // Make sure expanded section can be shown (remove inline style)
                    if (expandedSection && expandedSection.classList.contains('expanded-section')) {
                        expandedSection.style.display = '';
                    }
                    visibleCount++;
                } else {
                    // Hide this row
                    row.style.display = 'none';
                    // Also hide expanded section
                    if (expandedSection && expandedSection.classList.contains('expanded-section')) {
                        expandedSection.style.display = 'none';
                    }
                }
            });
            
            // Update count
            if (projectCount) {
                projectCount.textContent = visibleCount;
            }
        });
    });

    // Close expanded sections on ESC key
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            document.querySelectorAll('.dir-row.active').forEach(row => {
                row.classList.remove('active');
            });
        }
    });
</script>