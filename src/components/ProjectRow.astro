---
interface Props {
  project: {
    date: string;
    images?: string[];
    name: string;
    slug: string;
    type: string;
    desc: string;
    details: string;
    stack: string;
    year: string;
    status: string;
    category: string;
  };
}

const { project } = Astro.props;
const images = project.images?.filter(Boolean) ?? [];
const base = `public/images/archive/${project.slug}`;
---

<Fragment>
  <div class="dir-row" data-category={project.category}>
    <div class="col-date">{project.date}</div>
    <div class="col-name">&lt;DIR&gt; {project.name}</div>
    <div class="col-type">{project.type}</div>
    <div class="col-desc">{project.desc}</div>
  </div>

  <div class="expanded-section">
    <div class="expanded-grid">

      <!-- GALLERY REGION -->
      {images.length === 0 && (
        <div class="gallery-empty">
          <div class="stub">No screenshots yet</div>
        </div>
      )}

      {images.length === 1 && (
        <div>
          <figure class="frame">
            <img
              src={`${base}/${images[0]}`}
              alt={`${project.name} screenshot`}
              class="frame-img zoomable"
              data-lightbox-src={`${base}/${images[0]}`}
              loading="lazy"
              decoding="async"
            />
          </figure>
          <div class="image-prompt">click to expand</div>
        </div>
      )}

      {images.length > 1 && (
        <div class="gallery-wrapper">
          <div class="image-strip">
            {images.map((img, i) => (
              <img
                src={`${base}/${img}`}
                alt={`${project.name} screenshot ${i+1}`}
                class="thumb zoomable"
                data-index={i}
                data-lightbox-src={`${base}/${img}`}
                loading="lazy"
                decoding="async"
              />
            ))}
          </div>
          <div class="hint">click any image to expand</div>
        </div>
      )}
      <!-- /GALLERY REGION -->

      <!-- INFO -->
      <div class="expanded-info">
        <h4>Project Details</h4>
        <p>{project.details}</p>
        <div class="info-line"><span class="info-label">Stack:</span> <span class="info-value">{project.stack}</span></div>
        <div class="info-line"><span class="info-label">Year:</span> <span class="info-value">{project.year}</span></div>
        <div class="info-line"><span class="info-label">Status:</span> <span class="info-value">{project.status}</span></div>
      </div>
    </div>
  </div>
</Fragment>

<style>
  .dir-row {
    display: grid;
    grid-template-columns: 100px 200px 140px 1fr;
    gap: 1.5rem;
    padding: 0.75rem 0.5rem;
    border-left: 3px solid transparent;
    transition: all 0.2s ease;
    cursor: pointer;
  }

  .dir-row:hover {
    background: rgba(124, 179, 66, 0.08);
    border-left-color: #7cb342;
  }

  .dir-row.active {
    background: rgba(124, 179, 66, 0.08);
    border-left-color: #7cb342;
  }

  .col-date, .col-type, .col-desc {
    color: #999;
  }

  .col-name {
    color: #7cb342;
    font-weight: 600;
  }

  .expanded-section {
    display: none;
    margin-top: 1rem;
    padding: 1.5rem;
    background: rgba(124, 179, 66, 0.08);
    border-left: 3px solid #7cb342;
  }

  .dir-row.active + .expanded-section {
    display: block;
  }

  .expanded-grid {
    display: grid;
    grid-template-columns: 320px 1fr;
    gap: 2rem;
    align-items: start;
  }

  .gallery-empty {
    display: grid;
    place-items: center;
    width: 100%;
    max-width: 320px;
    aspect-ratio: 16/9;
    border: 1px dashed #333;
    border-radius: 6px;
    background: #0b0b0b;
  }

  .stub {
    color: #6f776f;
    font-size: 0.85rem;
  }

  .frame {
    margin: 0;
    width: 100%;
    max-width: 320px;
    aspect-ratio: 16/9;
    border: 1px solid #7cb342;
    border-radius: 6px;
    overflow: hidden;
    background: #0b0b0b;
  }

  .frame-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .frame-img:hover {
    transform: scale(1.02);
  }

  .gallery-wrapper {
    width: 100%;
    max-width: 320px;
  }

  .image-strip {
    display: flex;
    gap: 0.75rem;
    width: 100%;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    padding-bottom: 0.5rem;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .image-strip::-webkit-scrollbar {
    display: none;
  }

  .thumb {
    flex-shrink: 0;
    width: 320px;
    aspect-ratio: 16/9;
    border: 1px solid #7cb342;
    border-radius: 6px;
    object-fit: cover;
    scroll-snap-align: start;
    background: #0b0b0b;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .thumb:hover {
    transform: scale(1.02);
  }

  .hint {
    text-align: center;
    font-size: 11px;
    color: #7cb342;
    margin-top: 0.5rem;
    font-family: 'Consolas', 'Monaco', monospace;
  }

  .image-prompt {
    text-align: center;
    font-size: 11px;
    color: #7cb342;
    margin-top: 0.5rem;
    font-family: 'Consolas', 'Monaco', monospace;
  }

  .expanded-info h4 {
    color: #ccc;
    margin: 0 0 0.75rem;
    font-size: 0.9rem;
    position: relative;
    padding-left: 1rem;
  }

  .expanded-info h4::before {
    content: '>';
    position: absolute;
    left: 0;
    color: #7cb342;
  }

  .expanded-info p {
    color: #999;
    line-height: 1.7;
    margin-bottom: 1rem;
  }

  .info-line {
    color: #ccc;
    margin-bottom: 0.5rem;
  }

  .info-label {
    color: #7cb342;
    font-weight: 600;
    margin-right: 0.35rem;
  }

  .info-value {
    color: #999;
  }

  @media (max-width: 768px) {
    .dir-row {
      grid-template-columns: 1fr;
      gap: 0.5rem;
    }

    .expanded-grid {
      grid-template-columns: 1fr;
    }

    .frame,
    .gallery-wrapper {
      max-width: 100%;
    }

    .thumb {
      width: 100%;
      aspect-ratio: 3/2;
    }
  }
</style>

<style is:global>
  .cmd-body {
    font-family: 'Consolas', 'Monaco', 'Courier New', monospace !important;
  }
  
  .cmd-body * {
    font-family: inherit;
  }
</style>

<script>
  // Mouse wheel horizontal scroll for image strips
  document.querySelectorAll('.image-strip').forEach((strip) => {
    strip.addEventListener('wheel', (e) => {
      if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
        e.preventDefault();
        strip.scrollLeft += e.deltaY;
      }
    }, { passive: false });
  });
</script>